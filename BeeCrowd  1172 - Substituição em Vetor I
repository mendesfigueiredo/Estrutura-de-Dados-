#include <stdio.h>

struct Node{
  int value;
  Node *next;
  
  Node(int _value){
    value = _value;
    next = NULL;
  }
  Node(){
    next = NULL;
  }
};

struct List{
    Node *start;
    Node *end;
    int c;
    
    List(){
        start = NULL;
        end = NULL;
        c = 0;
    }
    
    int empty(){
        return start == NULL;
    }
    
    void pushFront(int value){
        Node *n = new Node(value);
        c++;
        
        if(empty()){
            start = n;
            end = n;
            return;
        }
        n->next = start;
        start = n;
    }
    
    void pushBack(int value){
        Node *n = new Node(value);
        c++;
        
        if(empty()){
            start = n;
            end = n;
            return;
        }
        end->next = n;
        end = n;
    }
    
    void print(){
        Node *aux = start;
        int index = 0;
        while(aux != NULL){
            printf("X[%d] = %d\n", index, aux->value);
            aux = aux->next;
            index++;
        }
    }
    int size(){
        return c;
    }
    void substituicao(){
        Node *aux = start;
        while(aux != NULL){
            if(aux->value <= 0){
                aux->value = 1;
            }
            aux = aux->next;
        }
        print();
    }
};


int main(){
    List l;
    int valor;

    for(int i = 0; i < 10; i++){
        scanf("%d", &valor);
        l.pushBack(valor);
    }
    l.substituicao();
    
    return 0;
}
