#include <stdio.h>
struct Node {
    int value;
    Node *next;

    Node(int _value) {
        value = _value;
        next = NULL;
    }
    Node() {
        next = NULL;
    }
};
struct List {
    Node *start;
    Node *end;
    int c;

    List() {
        start = NULL;
        end = NULL;
        c = 0;
    }

    bool empty() {
        return start == NULL;
    }

    void pushBack(int value) {
        Node *n = new Node(value);
        c++;

        if (empty()) {
            start = n;
            end = n;
        } else {
            end->next = n;
            end = n;
        }
    }
    void maiorValue() {
        if (empty()) {
            printf("Lista vazia\n");
            return;
        }

        Node *aux = start;
        int maior = aux->value;
        int posMaior = 1;
        int posAtual = 1;

        while (aux != NULL) {
            if (aux->value > maior) {
                maior = aux->value;
                posMaior = posAtual;
            }
            aux = aux->next;
            posAtual++;
        }

        printf("%d\n", maior);
        printf("%d\n", posMaior);
    }
};
int main() {
    List l;
    int valor;

    for (int i = 0; i < 100; i++) {
        scanf("%d", &valor);
        l.pushBack(valor);
    }
    l.maiorValue();

    return 0;
}
